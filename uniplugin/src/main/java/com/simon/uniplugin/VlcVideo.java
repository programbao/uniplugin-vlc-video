package com.simon.uniplugin;

// Source code is unavailable, and was generated by the Fernflower decompiler.

import android.content.Context;
import android.net.Uri;
import android.view.SurfaceView;

import com.taobao.weex.WXSDKInstance;
import com.taobao.weex.ui.action.BasicComponentData;
import com.taobao.weex.ui.component.WXComponent;
import com.taobao.weex.ui.component.WXComponentProp;
import com.taobao.weex.ui.component.WXVContainer;

//import org.videolan.libvlc.IVLCVout;
import org.videolan.libvlc.LibVLC;
import org.videolan.libvlc.Media;
import org.videolan.libvlc.MediaPlayer;
import org.videolan.libvlc.interfaces.IVLCVout;

//import javax.naming.Context;

public class VlcVideo extends WXComponent<SurfaceView> {

    private LibVLC mLibVLC;
    private MediaPlayer mMediaPlayer;

    private SurfaceView surfaceView;
    private IVLCVout vlcVout;

    public VlcVideo(WXSDKInstance instance, WXVContainer parent, BasicComponentData basicComponentData) {
        super(instance, parent, basicComponentData);
    }

    @Override
    protected SurfaceView initComponentHostView(Context context) {
        initPlay(context);
        return surfaceView;
    }

    public void initPlay(Context context) {
        mLibVLC = new LibVLC(context);
        mMediaPlayer = new MediaPlayer(mLibVLC);
        surfaceView = new SurfaceView(context);
        vlcVout = mMediaPlayer.getVLCVout();

        mMediaPlayer.setEventListener(new MediaPlayer.EventListener() {
            @Override
            public void onEvent(MediaPlayer.Event event) {
                // 处理播放事件
            }
        });
    }

    @WXComponentProp(name = "play")
    public void play(String path) {
        mMediaPlayer.stop();
        vlcVout.detachViews();
        surfaceView.post(new Runnable() {
            @Override
            public void run() {
                // 在子线程中准备播放
                int width = surfaceView.getWidth();
                int height = surfaceView.getHeight();
                System.out.println("width:" + width + " height:" + height);
                vlcVout.setVideoSurface(surfaceView.getHolder().getSurface(), surfaceView.getHolder());
                vlcVout.setWindowSize(width, height);
                vlcVout.attachViews();

                try {
                    Media media = new Media(mLibVLC, Uri.parse(path));
                    media.setHWDecoderEnabled(true, false);
                    media.addOption(":network-caching=100");
                    media.addOption(":clock-jitter=0");
                    media.addOption(":clock-synchro=0");
                    media.addOption(":fullscreen");
                    mMediaPlayer.setAspectRatio(width + ":" + height);
                    mMediaPlayer.setMedia(media);
                    media.release();
                } catch (Exception var4) {
                    throw new RuntimeException("Invalid asset folder");
                }

                mMediaPlayer.play();
            }
        });
    }

    // 生命周期方法

    @Override
    public void onActivityStart() {
        super.onActivityStart();
    }

    // 其他生命周期方法
    @Override
    public void onActivityStop() {
        super.onActivityStop();
        this.mMediaPlayer.stop();
        this.vlcVout.detachViews();
    }

    @Override
    public void onActivityResume() {
        super.onActivityResume();
    }

    @Override
    public void onActivityPause() {
        super.onActivityPause();
    }
    @Override
    public void onActivityDestroy() {
        super.onActivityDestroy();
        mMediaPlayer.release();
        mLibVLC.release();
    }
}